{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":"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","sources":["webpack://catalogue-restaurant/./src/scripts/data/favorite-restaurant.js","webpack://catalogue-restaurant/./src/scripts/globals/api-endpoint.js","webpack://catalogue-restaurant/./src/scripts/data/restaurant-source.js","webpack://catalogue-restaurant/./src/scripts/globals/config.js","webpack://catalogue-restaurant/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  RESTAURANT_LIST: `${CONFIG.BASE_URL}list`,\r\n  RESTAURANT_DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n  RESTAURANT_REVIEW: `${CONFIG.BASE_URL}review`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantSource {\r\n  static async restaurantList() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT_LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async restaurantDetail(id) {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT_DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n\r\n  static async addCustomerReview(data) {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT_REVIEW, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const responseJson = await response.json();\r\n    console.log(responseJson);\r\n    return responseJson;\r\n  }\r\n}\r\n\r\nexport default RestaurantSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL_SM: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  BASE_IMAGE_URL_MD: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  BASE_IMAGE_URL_LG: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: 'Catalogue-Restaurant-V1',\r\n  DATABASE_NAME: 'restaurants-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\r\nimport '../styles/style.css';\r\nimport '../styles/responsive.css';\r\nimport App from './views/app';\r\nimport swRegister from './utils/sw-register';\r\n\r\nconst app = new App({\r\n  buttonOpen: document.querySelector('.navbar__button__open_menu'),\r\n  buttonClose: document.querySelector('.navbar__button__close_menu'),\r\n  navbar: document.querySelector('.navbar'),\r\n  body: document.querySelector('body'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', async () => {\r\n  app.renderPage();\r\n  await swRegister();\r\n});\r\n\r\nconst navbarElement = document.querySelector('.navbar');\r\n// eslint-disable-next-line func-names\r\nwindow.addEventListener('scroll', function () {\r\n  // eslint-disable-next-line no-unused-expressions\r\n  this.scrollY > 20 ? navbarElement.classList.add('sticky_navbar') : navbarElement.classList.remove('sticky_navbar');\r\n});\r\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","RESTAURANT_LIST","RESTAURANT_DETAIL","RESTAURANT_REVIEW","fetch","API_ENDPOINT","response","json","responseJson","restaurants","data","method","headers","body","JSON","stringify","console","log","BASE_URL","BASE_IMAGE_URL_SM","BASE_IMAGE_URL_MD","BASE_IMAGE_URL_LG","DEFAULT_LANGUAGE","CACHE_NAME","app","App","buttonOpen","document","querySelector","buttonClose","navbar","window","addEventListener","renderPage","swRegister","navbarElement","this","scrollY","classList","add","remove"],"sourceRoot":""}